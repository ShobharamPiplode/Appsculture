package com.appsculture.view;

import android.content.Intent;
import android.os.Bundle;
import android.support.v4.app.LoaderManager;
import android.support.v4.content.Loader;
import android.support.v7.app.AppCompatActivity;
import android.view.Window;
import android.view.WindowManager;
import android.widget.Toast;

import com.appsculture.R;
import com.appsculture.controller.VocabularyDataLoader;
import com.appsculture.database.dao.VocabularyDAO;
import com.appsculture.models.Word;

import java.util.List;

/**
 * SplashActivity class to display Splash screen while Data is loading from Server.
 * Data is loading using Loader.
 */
public class SplashActivity extends AppCompatActivity implements LoaderManager.LoaderCallbacks<Boolean>
{

    public static String URL = "http://appsculture.com/vocab/words.json";

    @Override
    protected void onCreate(Bundle savedInstanceState)
    {
        requestWindowFeature(Window.FEATURE_NO_TITLE);
        getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,
                WindowManager.LayoutParams.FLAG_FULLSCREEN);

        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_splash);

        // Init Loader manager
        getSupportLoaderManager().initLoader(0, null, this);
    }


    /**
     * Instantiate and return a new Loader for the given ID.
     *
     *
     * @param id   The ID whose loader is to be created.
     * @param args Any arguments supplied by the caller.
     * @return Return a new Loader instance that is ready to start loading.
     */
    @Override
    public Loader<Boolean> onCreateLoader(int id, Bundle args)
    {
        VocabularyDAO vocabularyDAO =null;
        try{
            vocabularyDAO =  new VocabularyDAO(this);
            if(vocabularyDAO!=null)
            {
                // Check data is already available or not.
                // IF available DO NOT DOWNLOAD
                List<Word> listData = vocabularyDAO.fetchWords();
               if( listData!=null && listData.size()>0)
               {
                   return new VocabularyDataLoader(this, URL,false);
               }else
               {
                   return new VocabularyDataLoader(this, URL,true);
               }
            }
        }catch (Exception e){
            e.printStackTrace();
        }finally
        {
            if(vocabularyDAO!=null)
                vocabularyDAO.close();
        }
       return null;
    }

    /**
     * Called when a previously created loader has finished its load.

     * @param loader The Loader that has finished.
     * @param data   The data generated by the Loader.
     */
    @Override
    public void onLoadFinished(Loader<Boolean> loader, Boolean data)
    {
        //After Loader is finished data loading , Start Activity for display the list of word.
        //Otherwise show Error message.
        if(data.booleanValue())
        {
            Intent intent = new Intent(this,WordListActivity.class);
            startActivity(intent);
        }else
        {
            Toast.makeText(getApplicationContext(),"Error in loading..",Toast.LENGTH_SHORT).show();
        }
        finish();
    }

    /**
     * Called when a previously created loader is being reset, and thus
     * making its data unavailable.  The application should at this point
     * remove any references it has to the Loader's data.
     *
     * @param loader The Loader that is being reset.
     */
    @Override
    public void onLoaderReset(Loader<Boolean> loader) {

    }
}
